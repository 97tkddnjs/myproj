<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dboard.myproj.mysite.admin.dao.AdminDAO">

    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>

                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">

                    <choose>
                        <when test="1== searchType">
                            and member_id like concat('%', #{keyword}, '%')
                        </when>
                        <when test="2== searchType">
                            and exists  (
                            select restrict_id
                            from   restrict_member
                            where  member_id = cm.member_id
                            and    restrict_show=true)

                        </when>
                        <when test="3== searchType">
                            and (select member_id
                            from course_registration cr
                            where ( select substr(class_ymd,1,4)
                            from class_code where class_id= cr.class_id and del_yn='n') =  #{keyword}) = cm.`member_id`

                        </when>
                        <when test="4== searchType">
                            where class_ymd like concat( #{keyword}, '%')

                        </when>
                    </choose>
                </when>

                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND 1=1
                </otherwise>
            </choose>
        </if>
    </sql>



    <select id="findAllUserMember" parameterType="com.dboard.myproj.config.page.SearchDto"
            resultType="com.dboard.myproj.data.dto.AdminMemberDTO">
        select
        `member_id`         ,
        `email`      ,
        `password`   ,
        `member_nm`       ,
        `phone_num`      ,
        `party`         ,
        `grade_id`      ,
        `reg_dt`        ,
        exists  (
        select restrict_id
        from   restrict_member
        where  member_id = cm.member_id
        and    restrict_show=true) as `restrict`
        from class_member cm
        where grade_id= 2

        <include refid="search" />
        LIMIT #{offset}, #{recordSize}
    </select>

    <select id="countMember" parameterType="com.dboard.myproj.config.page.SearchDto"
            resultType="int">
        select
        count(*)
        from class_member cm
        where grade_id= 2

        <include refid="search" />
    </select>

    <select id="findUserMemberByID" parameterType="String"
            resultType="com.dboard.myproj.data.dto.AdminMemberDTO">

        select
            `member_id`         ,
            `email`      ,
            `password`   ,
            `member_nm`       ,
            `phone_num`      ,
            `party`         ,
            `grade_id`      ,
            `reg_dt`        ,
            exists  (
                    select restrict_id
                    from   restrict_member
                    where  member_id = cm.member_id
                      and    restrict_show=true) as `restrict`
        from class_member cm
        where `member_id` = #{member_id}

    </select>

    <select id="findAllClassCode" parameterType="com.dboard.myproj.config.page.SearchDto"
             resultType="com.dboard.myproj.data.entity.ClassCodeVO">
        select
        `class_id`  ,
        `class_nm`  ,
        `class_ymd` ,
        `del_yn`
        from class_code

        <include refid="search" />
        LIMIT #{offset}, #{recordSize}
    </select>

    <select id="countClassCode" parameterType="com.dboard.myproj.config.page.SearchDto"
            resultType="int">
        select
        count(*)
        from class_code

        <include refid="search" />
    </select>
    
    
    <insert id="saveClassCode" parameterType="com.dboard.myproj.data.dto.ClassCodeDTO">

        insert into class_code (
            `class_nm`  ,
            `class_ymd` ,
            `del_yn`)
        values
            (
             #{class_nm},
             #{class_ymd},
             'N'
            )



    </insert>


    <insert id="saveClassBoardTypeDefault" parameterType="com.dboard.myproj.data.dto.ClassCodeDTO">

        insert into class_board_type (
                   `class_id`  ,
                   `board_id` ,
                   `cb_show`)
               values
                   (
                       (select `class_id`
                       from class_code
                       where `class_nm` = #{class_nm} and `class_ymd` = #{class_ymd})
                       , 1
                       , 'N'

                   )


    </insert>


    <select id="findClassCodeById"
            parameterType="String"
            resultType="com.dboard.myproj.data.entity.ClassCodeVO">

         select
                    `class_id`  ,
                    `class_nm`  ,
                    `class_ymd` ,
                    `del_yn`
        from class_code
        where `class_id`=#{classid}


    </select>

    <update id="updateClassCodeById"
            parameterType="com.dboard.myproj.data.dto.ClassCodeDTO">
        update class_code
        set `del_yn` = #{del_yn}
        where `class_id`=#{class_id}

    </update>


    <select id="findAllBoard" parameterType="com.dboard.myproj.config.page.SearchDto"
            resultType="com.dboard.myproj.data.dto.AdminBoardDTO">

        select
             cbt.class_id ,
             cc.class_ymd,
             cc.class_nm,
             (select board_nm from board_type bt where bt.board_id = cbt.board_id) as board_nm
         from class_board_type as cbt inner join class_code as cc on cbt.class_id= cc.class_id
         where  cc.del_yn ='N' and cbt.cb_show='N' ;


    </select>

    <select id="findCourseRegistrationByMemberID" parameterType="String"
            resultType="com.dboard.myproj.data.dto.ClassCodeDTO">
        select
            cr.class_id		,
            (select class_nm from class_code cc where  cc.class_id = cr.class_id) as class_nm		,
            (select  class_ymd from class_code cc where  cc.class_id = cr.class_id) as class_ymd
        from course_registration cr
        where 1=1
        and `member_id` = #{memberid} ;

    </select>

    <select id="findRestrictMemberById"
            parameterType="String"
            resultType="int">
        select count(*)
        from restrict_member
        where `member_id` = #{member_id}

    </select>

    <update id="updateRestrictMember" parameterType="com.dboard.myproj.data.dto.AdminMemberDTO">
        update restrict_member
        set `restrict_show` = #{restrict}
        where `member_id` = #{member_id}

    </update>
    <insert id="saveRestrictMemberById" parameterType="String">
        insert into restrict_member(
              `member_id`
              ,`restrict_show`
          )values (
              #{member_id}
              , true
                          )

    </insert>

    <select id="findAllBoardType"
            resultType="com.dboard.myproj.data.entity.BoardTypeVO">
        select
                `board_id`
            ,   `board_nm`
        from board_type;

    </select>
    <select id="countClassBoardTypeByID" parameterType="map"
            resultType="com.dboard.myproj.data.dto.ClassBoardTypeDTO">
        select
              `cb_type`
             ,`cb_show`
        from class_board_type cbt
        where  `board_id` =#{boardid}
        and    `class_id` =#{classid};

    </select>

    <insert id = "saveBoardType" parameterType="String">
        insert into board_type(
                               `board_nm`
        )values (
                 #{boardnm}
                        )

    </insert>
    <select id="findClassBoardTypeByClassId" parameterType="String"
    resultType="com.dboard.myproj.data.dto.ClassBoardTypeDTO">
        select
            `cb_type`
        ,   `board_id`
        ,   (select board_nm from board_type bt where bt.board_id = cbt.board_id) as `board_nm`

        from class_board_type cbt
        where cbt.class_id = #{classid}
        and cbt.cb_show='N'

    </select>
    <update id="updateClassBoardTypeById"
        parameterType="hashmap"
    >
        update class_board_type
        set `cb_show` =#{cb_show}
        where `cb_type` = #{cb_type}


    </update>
    <insert id="saveClassBoardTypeById">
        insert into class_board_type (
            `class_id`  ,
            `board_id` ,
            `cb_show`)
        values
            (
            #{classid}
            , #{boardid}
            , 'N'

            )


    </insert>
    <select id="findRegClassByClassId" parameterType="int"
            resultType="com.dboard.myproj.data.dto.BoardTypeDTO">
        select `board_id`
             ,`board_nm`
             , exists (
                 select board_id
                 from class_board_type cbt
                 where class_id=#{classid}
                   and cbt.board_id = bt.board_id and cbt.cb_show='N' )
            as `register`
        from board_type bt;

    </select>

</mapper>